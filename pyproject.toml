[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "alfa"
version = "0.0.1"
description = "A minimalist platform for running trading strategies."
authors = [{ name = "Mircea Avram", email = "mavram@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]
dependencies = ["yfinance>=0.2.50", "peewee>=3.17.8"]

[project.urls]
repository = "https://github.com/mavram/alfa"

[tool.poetry]
include = ["tests"]

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
flake8 = "^7.1.1"
isort = "^5.13.2"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"

[tool.black]
line-length = 127
target-version = ["py312"]
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
addopts = "--verbose --disable-warnings --cov=alfa --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
omit = ["*/tests/*", "*/__init__.py", "*/__main__.py"]

[tool.coverage.report]
# Exclude specific lines or patterns
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
]
fail_under = 100
